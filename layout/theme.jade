!!!
html
  head
    meta(charset='utf8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge, chrome=1')
    
    title {% if template == 'index' %}{% if page_title contains 'Welcome' %}{{ shop.name }} &ndash; Welcome{% else %}{{ page_title }}{% endif %}{% elsif template == '404' %}Page Not Found{% elsif page_title contains shop.name %}{{ page_title }}{% else %}{{ page_title }} &ndash; {{ shop.name }}{% endif %}

    {% if page_description %}
    meta(name='description', content='{{ page_description }}')
    {% endif %}
    
    link(rel="canonical", href="{{ canonical_url }}")
    meta(name="viewport", content="width=device-width")

    {{ content_for_header }}
    
    {{ 'style.css' | asset_url | stylesheet_tag }}
    
    {% if template contains 'customers' %}
    {{ 'shopify_common.js' | shopify_asset_url | script_tag }}
    {{ 'customer_area.js'  | shopify_asset_url | script_tag }}
    {% endif %}

    //- 
      Needed when shopify_common.js is used.
      We will get rid of that depency: 
      https://github.com/Shopify/shopify/issues/3732

    //if lt IE 8
      {{ 'json2.js' | asset_url | script_tag }}

   {{ 'option_selection.js' | shopify_asset_url | script_tag }}
 

body(id="{{ page_title | handle }}", class="{% if customer %}customer-logged-in {% endif %}template-{{ template | replace: '.', ' ' | truncatewords: 1, '' | handle }}")

  .container
    header
      //- 
        Older browsers don't support the HTML5 placeholder attribute, so it's a good idea to use JavaScript
        to show and hide the placeholder text.
        Have a look in assets/shop.js.liquid to see sample JavaScript for this.
      
      form.search-form(action="/search", method="get", role="search")
        input#search-field.hint(name="q", type="text", placeholder="Search store...")
        input#search-submit(type="submit", value="Search")

      
      {% if shop.customer_accounts_enabled %}
      p.customer-links
        {% if customer %}
        :markdown
          Logged in as [{{ customer.first_name }}](/account) · {{ 'Log out' | customer_logout_link }}
        {% else %}
        {{ 'Log in' | customer_login_link }}
        {% if shop.customer_accounts_optional %}
        or {{ 'Create an account' | customer_register_link }}
        {% endif %}
        {% endif %}
      {% endif %}
      


      //- 
        Note on checkout link: it is a good idea to avoid linking to /checkout directly because shops that use 
        Paypal Express Checkout and/or Google Checkout have special checkout buttons on the /cart page. Also,
        special instructions for the seller are entered on the /cart page.
      
      p.checkout-link
        a(href="/cart") {{ cart.item_count }} {{ cart.item_count | pluralize: 'item', 'items' }} ({{ cart.total_price | money }}) ·  
        a(href="/cart") Check out
      
      //- 
        It would be nice if the logo was a shop setting, rather than a theme setting.
        But for now, it is a theme setting. The shop logo is uploaded on the theme settings page.
        Link to the theme settings page of currently published theme will always be:
        http://www.shopify.com/admin/themes/current/settings. In the theme's files, in your instructions,
        use a relative link: /admin/themes/current/settings.
        To add theme settings to a theme, see this: http://wiki.shopify.com/Theme_Settings
        Theme settings are added to http://www.shopify.com/admin/themes/current#config/settings.html
    
      {% if settings.use_logo %}
      a#logo(href="/", role="banner")
        {{ 'logo.png' | asset_url | img_tag: shop.name }}

      {% endif %}
      {% if template == 'index' %}
      h1#site-title(class="{% if settings.use_logo %} hidden{% endif %}")
        a(href="/") {{ shop.name }}

      {% else %}
      a#site-title(href="/", class="{% if settings.use_logo %} hidden{% endif %}") {{ shop.name }}
      {% endif %}
      
      //- 
        A word on drop-down menus: Shopify has no concept of drop-down menus.
        Drop-down menus in Shopify themes are a hack that relies on a naming convention.
        To create a drop-down menu, the merchant must create a link list that has the same name as the link he wants the drop-down for.
        For example, if he wants a drop-down under a 'Shop by brand' link (say, he has such link in his Main Menu), he needs to create
        a linklist called 'Shop by brand', and populate it with links. Once he has done that, there'll be a drop-down under 'Shop by brand'.
        Shopify has a visual how-to guide here: http://support.shopify.com/customer/portal/articles/262961.
        The naming convention hack won't work well if a shop's navigation uses non-English characters. There's a much more verbose coding solution
        that can handle non-English characters here: http://wiki.shopify.com/Fix_to_Drop-down_menu_code_to_work_with_non-English_characters.
        A word on sub-categories: Shopify manages sub-categories using product tags: http://support.shopify.com/customer/portal/articles/75425.
      
      nav(role="navigation")
        ul.nav
          {% for link in linklists.main-menu.links %}
          {% assign has_sub_menu = false %}
          {% assign has_sub_categories = false %}
          {% assign parent_link_active = false %}
          {% assign child_list_handle = link.title | handle %}
          {% if linklists[child_list_handle] and linklists[child_list_handle].links.size > 0 %}
          {% assign has_sub_menu = true %}
          {% for l in linklists[child_list_handle].links %}
          {% if page_title == l.title %}
          {% assign parent_link_active = true %}
          {% endif %}
          {% endfor %}
          {% elsif link.type == 'collection_link' and link.object.all_tags.size > 0 %}
          {% assign has_sub_categories = true %}
          {% endif %}
          li(class="nav-item{% if forloop.first %} first{% elsif forloop.last %} last{% endif %}{% if link.active or parent_link_active %} active{% endif %}{% if has_sub_menu or has_sub_categories %} has-dropdown{% endif %}")
            {{ link.title | link_to: link.url }}
            {% if has_sub_menu or has_sub_categories %}
            ul.sub-nav
              li.sub-nav-niblet"
              {% if has_sub_menu %}
              {% for l in linklists[child_list_handle].links %}
              li(class="sub-nav-item{% if forloop.first %} first{% elsif forloop.last %} last{% endif %}{% if l.active %} active{% endif %}")
                a(class="{% if forloop.first %}first{% elsif forloop.last %}last{% endif %}", href="{{ l.url }}") {{ l.title }}

              {% endfor %}
              {% elsif has_sub_categories %}
              {% for tag in link.object.all_tags %}
              li(class="sub-nav-item{% if forloop.first %} first{% elsif forloop.last %} last{% endif %}{% if current_tags contains tag %} active{% endif %}")
                a(class="{% if forloop.first %}first{% elsif forloop.last %}last{% endif %}", href="{{ link.url }}/{{ tag | handle }}") {{ tag }}
              {% endfor %}
              {% endif %}
            {% endif %}
          {% endfor %}


    #main(role="main")
      //- 
        We have a template file to render.
        That's what content_for_layout is for.

      {{ content_for_layout }}

    footer
      {% if linklists.footer.links.size > 0 %}
      p(role="navigation")
        {% for link in linklists.footer.links %}
        a(href="{{ link.url }}", title="{{ link.title }}", class="{% if link.active %}active{% endif %}") {{ link.title }}
        {% endfor %}
      {% endif %}
      
      p(role="contentinfo") Copyright &copy; {{ "now" | date: "%Y" }} {{ shop.name }}. {{ powered_by_link }}.
  
  {{ 'shop.js'  | asset_url | script_tag }}